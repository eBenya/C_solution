/*”пражнение 4.3. »сход€ из предложенной 
нами схемы, дополните программу-калькул€тор 
таким образом, чтобы она "понимала" оператор 
получени€ остатка от делени€ (%) и ќ“–»÷ј“≈Ћ№Ќџ≈ числа.*/

#include <stdio.h>
#include <ctype.h>
#include <stdlib.h> //atof

#define BUFSIZE 100
#define MAXVAL 100 /* ???????????? ??????? ????? */
#define MAXOP 100 /* ????. ?????? ???????? ??? ????????? */
#define NUMBER '0' /* ??????? ????? */
#define  MAXLEN 1000


int getch(void);
void ungetch(int);
int getop(char[]);
void push(double);
double pop(void);

int main() {

	int type;
	double op2, op1;
	char s[MAXOP];

	while ((type = getop(s)) != EOF) {
		switch (type) {
		case NUMBER:
			push(atof(s));
			break;
		case '%':
			op1 = pop();
			op2 = pop();
			push(op2 - ((int)(op2 / op1) * op1));
			break;
		case '+':
			push(pop() + pop());
			break;
		case '*':
			push(pop() * pop());
			break;
		case '-':
			op2 = pop();
			push(pop() - op2);
			break;
		case '/':
			op2 = pop();
			if (op2 != 0.0)
				push(pop() / op2);
			else
				printf("??????: ??????? ?? ????\n");
			break;
		case '\n':
			printf("\t%.8g\n", pop());
			break;
		default:
			printf("??????: ??????????? ???????? %s\n", s);
			break;
		}
	}
	return 0;
}



int sp = 0; /* ????????? ????????? ??????? ? ????? */
double val[MAXVAL]; /* ???? */
					/* push: ???????? ???????? f ? ???? */
void push(double f) {
	if (sp < MAXVAL)
		val[sp++] = f;
	else
		printf("??????: ???? ?????, %g ?? ??????????\n", f);
}
/* pop: ????? ? ??????? ????? ? ?????? ? ???????? ?????????? */
double pop(void) {
	if (sp > 0)
		return val[--sp];
	else {
		printf("??????: ???? ????\n");
		return 0.0;
	}
}

/*if (isdigit(c) || c == '-') { // ??????????? ????? ????? 

if (c == '-')
if (isdigit(t = getch())) {
	s[++i] = t;
	while (isdigit(s[++i] = c = getch()));
}
else
{
	ungetch(t);
	return c;
}
	}*/
/* getop: переделана€ с учетом на -, но уже кор€во */
int getop(char s[])
{
	int i, c;

	while ((s[0] = c = getch()) == ' ' || c == '\t');
	s[1] = '\0';
	if ( !isdigit(c) && c != '.' && c != '-' )
		return c;  /* ?? ????? */
	i = 0;
	if (c == '-')
		if (isdigit(s[++i] = c = getch()))
			while (isdigit(s[++i] = c = getch()));
		else return c;
	if (isdigit(c)) /* ??????????? ????? ????? */
		while (isdigit(s[++i] = c = getch()));
	if (c == '.') /* ??????????? ??????? ????? */
		while (isdigit(s[++i] = c = getch()));
	s[i] = '\0';
		ungetch(c);

	return NUMBER;
}


char buf[BUFSIZE]; /* ????? ??? ungetch */
int bufp = 0; /* ????, ????????? ??????? ? ?????? */

int getch(void) /* ????? (???????? ????????????) ?????? */
{
	return (bufp > 0) ? buf[--bufp] : getchar();
}

void ungetch(int c) /* ??????? ?????? ?? ???? */
{
	if (bufp >= BUFSIZE)
		printf("ungetch: ??????? ????? ????????\n");
	else
		buf[bufp++] = c;
}

